#!/usr/bin/env ruby

require "berliner"

require "rubygems"
require "commander/import"
require "berliner/extend/string"
require "optparse"

program :name, "Berliner"
program :version, Berliner::VERSION
program :description, Berliner::DESCRIPTION

global_option "--verbose"
default_command :help
never_trace!

command :read do |c|
  c.syntax = "berliner read [options]"
  c.summary = "Read the current Berliner"
  c.description = <<-HERE.format_heredoc
    Generate the current Berliner for reading.  If [-output PATH] is
    specified, saves the file to the given path, otherwise the file is
    saved to the current directory.
  HERE
  # c.option "-o", "--output PATH", "Output to a specific path"
  c.action do |args, options|
    fail OptionParser::InvalidArgument, args unless args.empty?
    Berliner::CLI.new(options.verbose).read
  end
end

command :search do |c|
  c.syntax = "berliner search [FOO]"
  c.summary = "List all available sources or search for [FOO]"
  c.description = <<-HERE.format_heredoc
    Perform a substring search of formula names for [FOO].
    If [FOO] is surrounded with slashes, then it is interpreted
    as a regular expression.  If no search term is
    given, all available sources are listed.
  HERE
  c.action do |args, options|
    fail OptionParser::InvalidArgument, args.drop(1) if args.length > 1
    Berliner::CLI.new(options.verbose).search(args.first)
  end
end

command :add do |c|
  c.syntax = "berliner add SOURCE.."
  c.summary = "Add a source to your Berliner"
  c.description = <<-HERE.format_heredoc
    Add a SOURCE to your Berliner. If more than one SOURCE is
    given, add all of them.
  HERE
  c.action do |args, options|
    Berliner::CLI.new(options.verbose).add(args)
  end
end

command :remove do |c|
  c.syntax = "berliner remove SOURCE.."
  c.summary = "Remove a source from your Berliner"
  c.description = <<-HERE.format_heredoc
    Remove a SOURCE from your Berliner. If more than one SOURCE is
    given, remove all of them.
  HERE
  c.action do |args, options|
    Berliner::CLI.new(options.verbose).remove(args)
  end
end

command :list do |c|
  c.syntax = "berliner list"
  c.summary = "List sources added to your Berliner"
  c.description = "List all sources currently added to your Berliner."
  c.action do |args, options|
    fail OptionParser::InvalidArgument, args unless args.empty?
    Berliner::CLI.new(options.verbose).list
  end
end
